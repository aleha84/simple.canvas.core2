html, 
      body {
          height: 100%;
          margin: 0;
      }

      body {
        min-height: 100%;
      }

      body.longPressInfo {
        cursor: progress;
      }

      input[type='button'] {
          cursor: pointer;
      }

      .container {
        width: 100%;
        height: 100%;
      }

      .container>div {
        display: inline-block;
        height: 100%;
      }

      .editor {
        /* width: 80%; */
    width:calc(100% - 400px);
    background:blue;
    float:left;
      }

      .controlsWrapper {
        /* width: 20%; */
        width:400px;
        background:#CCCCCC;
        float:right;   
        overflow-y: scroll;
      }

      .controlsWrapper>div {
        margin: 10px 15px;
      }

      .listbox {
          padding-top: 5px;
          padding-bottom:5px;
          width: 100%;
      }

      .listbox>*{
        text-align: center;
        display: block;
      }

      .listbox > .title {
          font-weight: bold;
          text-align: center;
      }

      .listbox>.selectHolder>* {
        display: inline-block;
      }

      .listbox>.selectHolder>.selectControls>* {
        display: block;
      }

      .listbox select {
          overflow-y: auto;
          margin: 0 auto;
          min-width: 150px;
      }

      .listbox select>option {
        border-bottom: 1px solid gray;
    }

    .row>.title {
        float: left;
        width: 20%;
    }
    .row>.title + .value {
        float: right;
        width: 80%;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
      }

      .rowFlex {
        display: flex;
      }

    .V2>.value.edit > .read,
    .inputBox>.value.edit > .read {
        display: none;
    }

    .V2>.value > .edit,
    .inputBox>.value > .edit {
        display: none;
    }

    .V2>.value > .edit > input,
    .inputBox>.value > .edit > input {
        display: inline-block;
        width: 30px;
    }

    .inputBox>.value > .edit > input.newValue {
      width: 100px;
    }

    .V2>.value.edit > .edit,
    .inputBox>.value.edit > .edit {
        display: block;
    }

    .V2>.value:not(.edit),
    .inputBox>.value:not(.edit) {
        cursor: pointer;
    }

    .inputBox>.value>.read {
      padding-left: 3px;
    }

    .main > .layersWrapper {
      overflow-y: auto;
      /* height: 800px; */
      border-top: 1px solid black;
    }

    .overlay {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0,0,0,0.5);
      z-index: 2000;
      margin: 0 !important;
    }

    .overlay>.content {
      position: absolute;
      top: 50%;
      left: 50%;
      /* font-size: 50px;
      color: white; */
      transform: translate(-50%,-50%);
      -ms-transform: translate(-50%,-50%);
      }

    .overlay>.content.export {
      width: 50%;
      height: 50%;
      background: white;
    }

    .overlay>.content.export>textarea {
        width: 100%;
        height: 100%;
        resize: none;
    }

    .overlay>.content.load {
        padding: 10px;
        background: white;
    }

    .overlay>.content.load .saveListItem.selected  {
        border: 1px solid blue;
    }

    .overlay>.content.save {
        padding: 10px;
        background: white;
    }

    .overlay>.close {
      position: absolute;
      top: 21%;
      right: 21%;
      width: 90px;
      height: 40px;
      font-size: 28px;
    }

    .overlay>.content.moveToLayer {
      padding: 10px;
      background-color: white;
    }

    /* moveToLayer */
    .moveToLayer .availableLayers>.layer {
      padding: 3px;
      margin: 0;
    }

    .moveToLayer .availableLayers>.layer.disabled {
      background-color: lightgray;
    }

    .moveToLayer .availableLayers>.layer.selected {
      background-color: cornflowerblue;
    }

    /* end moveToLayer */

    .editorBlock>.modeSwitch>.stateName {
        font-size: 20px;
        font-weight: bold;
    }

    .colorPicker input[type='text'] {
      width: 60px;
    }

    .colorPicker .readOnlyBlock {
      width: 20px;
      margin-right: 5px;
      border: 1px solid black;
    }

    .colorPicker.row {
      display: flex;
    }

    .colorPicker.row input[type='text'] {
      height: 16px;
    }

    .panel {
      position: absolute;
      z-index: 10000;
      background-color: #f1f1f1;
      border: 1px solid #d3d3d3;
      padding: 3px;
    }

    .panel>.header{
      display: flex;
      user-select: none;
    }

    .panel>.header>* {
      height: 20px;
    }


    .panel .toggle {
      width:70px;
    }

    .panel .drag {
      /* right: 5px; */
      /* height: 20px; */
      background: blue;
      flex: 1;
      min-width: 100px;
      margin-left: 4px;
      text-align: center;
      color: #46ddff;
      cursor: grab;
    }

    .panel .close {
      background: red;
      width: 20px;
      text-align: center;
      margin-left: 4px;
    }

    .panel .drag.active {
      background: #5e0a6d;
    }

    .panel .content {
      display: none;
    }

    .panel .content.visible {
      display: block;
    }

    .panel.utilities {
      width: auto;
      height:auto;
      left: 20px;
      top: 20px;
    }

    .panel.utilities .content {
      /* height: 30px; */
      height:auto;
      width:200px;
      /* display: none; */
    }

    .panel.palettes .itemWrapper>.buttonBlock>.addNewItemWrapper>.itemValue {
      width: 50px;
    }

    .panel.palettes .itemWrapper>.buttonBlock>.removeButton{
      background-color: red;
    }

    .panel.palettes .paletteItem {
      width: 20px;
      height: 20px;
    }

    .marginLeft5 {
      margin-left: 5px;
    }

    .paddingLeft2 {
      padding-left: 2px;
    }

    .notificationsHolder {
      position: fixed;
      z-index: 10001;
      width:10px;
    }

    .notificationsHolder.topLeft {
      left: 10px;
      top: 10px;
    }

    .notificationsHolder.topCenter {
      left: calc(50% - 160px);
      top: 10px;
    }

    .notificationsHolder.topRight {
      right: 10px;
      top: 10px;
    }

    .notificationsHolder.bottomLeft {
      left: 10px;
      bottom: 10px;
    }

    .notificationsHolder.bottomCenter {
      left: calc(50% - 160px);
      bottom: 10px;
    }

    .notificationsHolder.bottomRight {
      right: 10px;
      top: 10px;
    }

    .notificationsHolder>.notification {
      background-color: white;
      min-height: 50px;
      color: black;
      padding: 5px;
      margin-bottom: 8px;
      cursor: pointer;
      opacity: 1;
      transition: padding 250ms, opacity 250ms;
      border-radius: 3px;
      display: inline-block;
      width:150px;
    }

    .notificationsHolder>.notification:hover {
      padding: 10px;
    }

    .notificationsHolder>.notification.beforeRemove {
      opacity: 0;
    }

    .notificationsHolder>.notification.done {
      background-color: #99cc33;
    }

    .notificationsHolder>.notification.warning {
      background-color: #ffcc00;
    }

    .notificationsHolder>.notification.error {
      background-color: #cc3300;
    }

    .frames select>option.blink {
      animation: blinker 0.5s;
    }

    @keyframes blinker {
      50% {
        background-color: blue;
      }
    }